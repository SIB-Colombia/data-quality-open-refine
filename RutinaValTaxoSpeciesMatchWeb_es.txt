--------------------------------------------------------------------------------
---No Copiar
Rutinas del SiB Colombia para la limpieza y estandarización de datos primarios 
de Biodiversidad en OPEN REFINE

Nombre rutina: validación taxonómica con la herramienta Species Matching de GBIF
Languaje: GREL 'General Refine Expression Language'
Fecha última Actualización: 2018-05-30
Autores: Camila Plata, Ricardo Ortiz 

Explicación de la rutina: 
1-Compara la información del conjunto de datos original con la validación taxonómica
  realizada con la herramienta Species Matching de GBIF
1-Recupera la información del rango y estatus taxonómico de los taxones
2-Recupera la jerarquía taxonómica para los taxones evaluados
3-Compara la taxonomía original del conjunto de datos con la obtenida de Species Matching 


Requerimientos para utilizar la rutina
Archivo obtenido al validar los datos en la herramienta Species Matching de GBIF, 
el cual debe llamarse 'normalized'
Conjunto de datos a evaluar estandarizado en DwC

Advertencias
El límite del servicio web Species Matching en una sola consulta es de 6000 
 registros o nombres científicos.
En caso de tener un conjunto de datos mayor a 6000 registros haga la validación 
   taxonómica en Species Matching por nombres científicos únicos, la rutina funciona 
   de la misma manera en este caso.

---No Copiar
--------------------------------------------------------------------------------

  {
    "op": "core/column-addition",
    "description": "Create column suggestedSpecificEpithet at index 1 based on column occurrenceID using expression grel:if(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"rank\"].value==\"SPECIES\",split(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"scientificName\"].value,' ')[1],'')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedSpecificEpithet",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:if(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"rank\"].value==\"SPECIES\",split(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"scientificName\"].value,' ')[1],'')",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column genusValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedGenus\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "specificEpithetValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "specificEpithet",
    "expression": "grel:if(value==cells[\"suggestedSpecificEpithet\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column specificEpithet to position 1",
    "columnName": "specificEpithet",
    "index": 1
  },
  
  
 
  {
    "op": "core/column-addition",
    "description": "Create column suggestedGenus at index 6 based on column scientificName using expression grel:if(cell.cross(\"normalized\", \"occurrenceID\")[0].cells[\"rank\"].value==\"SPECIES\",split(cell.cross(\"normalized\", \"occurrenceID\")[0].cells[\"scientificName\"].value,' ')[0],if(cell.cross(\"normalized\", \"occurrenceID\")[0].cells[\"rank\"].value==\"GENUS\",split(cell.cross(\"normalized\", \"occurrenceID\")[0].cells[\"scientificName\"].value,' ')[0],''))",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedGenus",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:if(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"rank\"].value==\"SPECIES\",split(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"scientificName\"].value,' ')[0],if(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"rank\"].value==\"GENUS\",split(cell.cross(\"normalized\", \"occurrenceId\")[0].cells[\"scientificName\"].value,' ')[0],''))",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column genusValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedGenus\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "genusValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "genus",
    "expression": "grel:if(value==cells[\"suggestedGenus\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column genus to position 1",
    "columnName": "genus",
    "index": 1
  },
  {
    "op": "core/column-addition",
    "description": "Create column familyGBIF at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"family\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedFamily",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"family\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column familyValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedFamily\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "familyValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "family",
    "expression": "grel:if(value==cells[\"suggestedFamily\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column family to position 1",
    "columnName": "family",
    "index": 1
  },
  {
    "op": "core/column-addition",
    "description": "Create column order_GBIF at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"order\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedOrder",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"order\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column orderValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedOrder\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "orderValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "order",
    "expression": "grel:if(value==cells[\"suggestedOrder\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column order to position 1",
    "columnName": "order",
    "index": 1
  },
 {
    "op": "core/column-addition",
    "description": "Create column classGBIF at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"class\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedClass",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"class\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column classValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedClass\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "classValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "class",
    "expression": "grel:if(value==cells[\"suggestedClass\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column class to position 1",
    "columnName": "class",
    "index": 1
  },  
  {
    "op": "core/column-addition",
    "description": "Create column phylumGBIF at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"phylum\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedPhylum",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"phylum\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column phylumValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedPhylum\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "phylumValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "phylum",
    "expression": "grel:if(value==cells[\"suggestedPhylum\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column phylum to position 1",
    "columnName": "phylum",
    "index": 1
  },
  {
    "op": "core/column-addition",
    "description": "Create column kingdomGBIF at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"kingdom\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedKingdom",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"kingdom\"].value[0]",
    "onError": "set-to-blank"
  },
    {
    "op": "core/column-addition",
    "description": "Create column kingdomValidation at index 1 based on column kingdom using expression grel:if(value==cells[\"suggestedKingdom\"].value,1,0)\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "kingdomValidation",
    "columnInsertIndex": 1,
    "baseColumnName": "kingdom",
    "expression": "grel:if(value==cells[\"suggestedKingdom\"].value,1,0)\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column kingdom to position 1",
    "columnName": "kingdom",
    "index": 1
  },
   {
    "op": "core/column-addition",
    "description": "Create column canonicalName at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"species\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "acceptedName",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"species\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column scientificNameGBIF at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"scientificName\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedScientificName",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"scientificName\"].value[0]",
    "onError": "set-to-blank"
  },
      {
    "op": "core/column-move",
    "description": "Move column scientificName to position 1",
    "columnName": "scientificName",
    "index": 1
  },
   {
    "op": "core/column-addition",
    "description": "Create column MatchType at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"matchType\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "MatchType",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"matchType\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column status at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"status\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "status",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"status\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column rank at index 1 based on column scientificName using expression grel:cell.cross(\"normalized\",\"occurrenceID\").cells[\"rank\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "rank",
    "columnInsertIndex": 1,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"normalized\",\"occurrenceId\").cells[\"rank\"].value[0]",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-addition",
    "description": "Create column canonicalName1 at index 2 based on column rank using expression grel:if(value == \"SPECIES\",cells['suggestedGenus'].value+' '+cells['suggestedSpecificEpithet'].value,if(value == \"GENUS\",cells['suggestedGenus'].value,if(value == \"FAMILY\",cells['suggestedFamily'].value,if(value == \"ORDER\",cells['suggestedOrder'].value,if(value == \"CLASS\",cells['suggestedClass'].value,if(value == \"PHYLUM\",cells['suggestedPhylum'].value,if(value == \"KINGDOM\",cells['suggestedKingdom'].value,'')))))))",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "canonicalName",
    "columnInsertIndex": 6,
    "baseColumnName": "rank",
    "expression": "grel:if(value == \"SPECIES\",cells['suggestedGenus'].value+' '+cells['suggestedSpecificEpithet'].value,if(value == \"GENUS\",cells['suggestedGenus'].value,if(value == \"FAMILY\",cells['suggestedFamily'].value,if(value == \"ORDER\",cells['suggestedOrder'].value,if(value == \"CLASS\",cells['suggestedClass'].value,if(value == \"PHYLUM\",cells['suggestedPhylum'].value,if(value == \"KINGDOM\",cells['suggestedKingdom'].value,'')))))))",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column suggestedScientificNameAuthorship at index 7 based on column canonicalName using expression grel:cells['suggestedScientificName'].value.partition(cells[\"canonicalName\"].value)[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "suggestedScientificNameAuthorship",
    "columnInsertIndex": 7,
    "baseColumnName": "canonicalName",
    "expression": "grel:cells['suggestedScientificName'].value.partition(cells[\"canonicalName\"].value)[2].trim()",
    "onError": "set-to-blank"
  }