
El objetivo de este script de Openrefine es generar un reporte de calidad sobre la correcciones realizadas en los conjuntos de datos.
Se priorizan los resultados de 26 elementos del estándar DwC. 

Uso del Script:

1. Cargue el conjunto de datos corregido en Openrefine. Use un nombre descriptivo que incluya la entidad publicadora y el nombre del conjunto de datos (e.g. limpieza-UTCH_ColeccionHidrobiologica)
2. Cargue el conjunto de datos original en Openrefine. Use un nombre descriptivo que incluya la entidad publicadora y el nombre del conjunto de datos (e.g. original-UTCH_ColeccionHidrobiologica)
3. Remplace en el script el nombre del conjunto de datos original con la herramienta de buscar y remplazar.
4. Copie el script y péguelo en Openrefine en la opción "Apply" del conjunto de datos corregido . Click en OK y revise el resultado obtenido.



------------------------------------------------------------------------------------------------------------------------------

{
    "op": "core/column-addition",
    "description": "Create column original-occurrenceID at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"occurrenceID\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-occurrenceID",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"occurrenceID\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacionoccurrenceID at index 2 based on column occurrenceID using expression grel:if(value==cells[\"original-occurrenceID\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionoccurrenceID",
    "columnInsertIndex": 2,
    "baseColumnName": "original-occurrenceID",
    "expression": "grel:if(value==cells[\"occurrenceID\"].value,1,0)",
    "onError": "set-to-blank"
  },

 {
    "op": "core/column-addition",
    "description": "Create column original-catalogNumber at index 2 based on column catalogNumber using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"catalogNumber\").cells[\"catalogNumber\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-catalogNumber",
    "columnInsertIndex": 2,
    "baseColumnName": "catalogNumber",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"catalogNumber\").cells[\"catalogNumber\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacioncatalogNumber at index 2 based on column catalogNumber using expression grel:if(value==cells[\"original-catalogNumber\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioncatalogNumber",
    "columnInsertIndex": 2,
    "baseColumnName": "original-catalogNumber",
    "expression": "grel:if(value==cells[\"catalogNumber\"].value,1,0)",
    "onError": "set-to-blank"
  }, 
  
  {
    "op": "core/column-addition",
    "description": "Create column original-institutionID at index 2 based on column institutionID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"institutionID\").cells[\"institutionID\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-institutionID",
    "columnInsertIndex": 2,
    "baseColumnName": "institutionID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"institutionID\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacioninstitutionID at index 2 based on column institutionID using expression grel:if(value==cells[\"original-institutionID\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioninstitutionID",
    "columnInsertIndex": 2,
    "baseColumnName": "original-institutionID",
    "expression": "grel:if(value==cells[\"institutionID\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-institutionCode at index 2 based on column institutionCode using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"institutionCode\").cells[\"institutionCode\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-institutionCode",
    "columnInsertIndex": 2,
    "baseColumnName": "institutionCode",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"institutionCode\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacioninstitutionCode at index 2 based on column institutionCode using expression grel:if(value==cells[\"original-institutionCode\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioninstitutionCode",
    "columnInsertIndex": 2,
    "baseColumnName": "original-institutionCode",
    "expression": "grel:if(value==cells[\"institutionCode\"].value,1,0)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column original-collectionID at index 2 based on column collectionID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"collectionID\").cells[\"collectionID\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-collectionID",
    "columnInsertIndex": 2,
    "baseColumnName": "collectionID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"collectionID\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacioncollectionID at index 2 based on column collectionID using expression grel:if(value==cells[\"original-collectionID\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioncollectionID",
    "columnInsertIndex": 2,
    "baseColumnName": "original-collectionID",
    "expression": "grel:if(value==cells[\"collectionID\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-collectionCode at index 2 based on column collectionCode using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"collectionCode\").cells[\"collectionCode\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-collectionCode",
    "columnInsertIndex": 2,
    "baseColumnName": "collectionCode",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"collectionCode\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacioncollectionCode at index 2 based on column collectionCode using expression grel:if(value==cells[\"original-collectionCode\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioncollectionCode",
    "columnInsertIndex": 2,
    "baseColumnName": "original-collectionCode",
    "expression": "grel:if(value==cells[\"collectionCode\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-country at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"country\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-country",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"country\"].value[0]",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column validacioncountry at index 2 based on column country using expression grel:if(value==cells[\"original-country\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioncountry",
    "columnInsertIndex": 2,
    "baseColumnName": "original-country",
    "expression": "grel:if(value==cells[\"country\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-stateProvince at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"stateProvince\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-stateProvince",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"stateProvince\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionstateProvince at index 2 based on column stateProvince using expression grel:if(value==cells[\"original-stateProvince\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionstateProvince",
    "columnInsertIndex": 2,
    "baseColumnName": "original-stateProvince",
    "expression": "grel:if(value==cells[\"stateProvince\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-county at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"county\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-county",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"county\"].value[0]",
    "onError": "set-to-blank"
  },
  
   {
    "op": "core/column-addition",
    "description": "Create column validacioncounty at index 2 based on column county using expression grel:if(value==cells[\"original-county\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioncounty",
    "columnInsertIndex": 2,
    "baseColumnName": "original-county",
    "expression": "grel:if(value==cells[\"county\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column original-maximumElevationInMeters at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"maximumElevationInMeters\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-maximumElevationInMeters",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"maximumElevationInMeters\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionmaximumElevationInMeters at index 2 based on column maximumElevationInMeters using expression grel:if(value==cells[\"original-maximumElevationInMeters\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionmaximumElevationInMeters",
    "columnInsertIndex": 2,
    "baseColumnName": "original-maximumElevationInMeters",
    "expression": "grel:if(value==cells[\"maximumElevationInMeters\"].value,1,0)",
    "onError": "set-to-blank"
  },
   
   {
    "op": "core/column-addition",
    "description": "Create column original-minimumElevationInMeters at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"minimumElevationInMeters\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-minimumElevationInMeters",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"minimumElevationInMeters\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionminimumElevationInMeters at index 2 based on column minimumElevationInMeters using expression grel:if(value==cells[\"original-minimumElevationInMeters\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionminimumElevationInMeters",
    "columnInsertIndex": 2,
    "baseColumnName": "original-minimumElevationInMeters",
    "expression": "grel:if(value==cells[\"minimumElevationInMeters\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-verbatimLatitude at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"verbatimLatitude\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-verbatimLatitude",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"verbatimLatitude\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionverbatimLatitude at index 2 based on column verbatimLatitude using expression grel:if(value==cells[\"original-verbatimLatitude\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionverbatimLatitude",
    "columnInsertIndex": 2,
    "baseColumnName": "original-verbatimLatitude",
    "expression": "grel:if(value==cells[\"verbatimLatitude\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  
  
    {
    "op": "core/column-addition",
    "description": "Create column original-verbatimLongitude at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"verbatimLongitude\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-verbatimLongitude",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"verbatimLongitude\"].value[0]",
    "onError": "set-to-blank"
  },
  
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionverbatimLongitude at index 2 based on column verbatimLongitude using expression grel:if(value==cells[\"original-verbatimLongitude\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionverbatimLongitude",
    "columnInsertIndex": 2,
    "baseColumnName": "original-verbatimLongitude",
    "expression": "grel:if(value==cells[\"verbatimLongitude\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-decimalLatitude at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"decimalLatitude\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-decimalLatitude",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"decimalLatitude\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validaciondecimalLatitude at index 2 based on column decimalLatitude using expression grel:if(value==cells[\"original-decimalLatitude\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validaciondecimalLatitude",
    "columnInsertIndex": 2,
    "baseColumnName": "original-decimalLatitude",
    "expression": "grel:if(value==cells[\"decimalLatitude\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  
  {
    "op": "core/column-addition",
    "description": "Create column original-decimalLongitude at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"decimalLongitude\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-decimalLongitude",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"decimalLongitude\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validaciondecimalLongitude at index 2 based on column decimalLongitude using expression grel:if(value==cells[\"original-decimalLongitude\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validaciondecimalLongitude",
    "columnInsertIndex": 2,
    "baseColumnName": "original-decimalLongitude",
    "expression": "grel:if(value==cells[\"decimalLongitude\"].value,1,0)",
    "onError": "set-to-blank"
  },
    
  {
    "op": "core/column-addition",
    "description": "Create column original-scientificName at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"scientificName\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-scientificName",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"scientificName\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionscientificName at index 2 based on column scientificName using expression grel:if(value==cells[\"original-scientificName\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionscientificName",
    "columnInsertIndex": 2,
    "baseColumnName": "original-scientificName",
    "expression": "grel:if(value==cells[\"scientificName\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-taxonRank at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"taxonRank\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-taxonRank",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"taxonRank\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column validaciontaxonRank at index 2 based on column taxonRank using expression grel:if(value==cells[\"original-taxonRank\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validaciontaxonRank",
    "columnInsertIndex": 2,
    "baseColumnName": "original-taxonRank",
    "expression": "grel:if(value==cells[\"taxonRank\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
    {
    "op": "core/column-addition",
    "description": "Create column original-genus at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"genus\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-genus",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"genus\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validaciongenus at index 2 based on column genus using expression grel:if(value==cells[\"original-genus\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validaciongenus",
    "columnInsertIndex": 2,
    "baseColumnName": "original-genus",
    "expression": "grel:if(value==cells[\"genus\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  
   {
    "op": "core/column-addition",
    "description": "Create column original-family at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"family\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-family",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"family\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionfamily at index 2 based on column family using expression grel:if(value==cells[\"original-family\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionfamily",
    "columnInsertIndex": 2,
    "baseColumnName": "original-family",
    "expression": "grel:if(value==cells[\"family\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column original-order at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"order\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-order",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"order\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionorder at index 2 based on column order using expression grel:if(value==cells[\"original-order\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionorder",
    "columnInsertIndex": 2,
    "baseColumnName": "original-order",
    "expression": "grel:if(value==cells[\"order\"].value,1,0)",
    "onError": "set-to-blank"
  },

  
    {
    "op": "core/column-addition",
    "description": "Create column original-class at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"class\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-class",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"class\"].value[0]",
    "onError": "set-to-blank"
  },
  
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionclass at index 2 based on column class using expression grel:if(value==cells[\"original-class\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionclass",
    "columnInsertIndex": 2,
    "baseColumnName": "original-class",
    "expression": "grel:if(value==cells[\"class\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
   {
    "op": "core/column-addition",
    "description": "Create column original-phylum at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"phylum\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-phylum",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"phylum\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionphylum at index 2 based on column phylum using expression grel:if(value==cells[\"original-phylum\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionphylum",
    "columnInsertIndex": 2,
    "baseColumnName": "original-phylum",
    "expression": "grel:if(value==cells[\"phylum\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
   {
    "op": "core/column-addition",
    "description": "Create column original-kingdom at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"kingdom\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-kingdom",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"kingdom\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionkingdom at index 2 based on column kingdom using expression grel:if(value==cells[\"original-kingdom\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionkingdom",
    "columnInsertIndex": 2,
    "baseColumnName": "original-kingdom",
    "expression": "grel:if(value==cells[\"kingdom\"].value,1,0)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column original-basisOfRecord at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"basisOfRecord\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-basisOfRecord",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"basisOfRecord\"].value[0]",
    "onError": "set-to-blank"
  },
  
 {
    "op": "core/column-addition",
    "description": "Create column validacionBasisOfRecord at index 2 based on column basisOfRecord using expression grel:if(value==cells[\"original-basisOfRecord\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionBasisOfRecord",
    "columnInsertIndex": 2,
    "baseColumnName": "original-basisOfRecord",
    "expression": "grel:if(value==cells[\"basisOfRecord\"].value,1,0)",
    "onError": "set-to-blank"
  },
    
  
  {
    "op": "core/column-addition",
    "description": "Create column original-type at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"type\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-type",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"type\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validaciontype at index 2 based on column type using expression grel:if(value==cells[\"original-type\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validaciontype",
    "columnInsertIndex": 2,
    "baseColumnName": "original-type",
    "expression": "grel:if(value==cells[\"type\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
    
   {
    "op": "core/column-addition",
    "description": "Create column original-license at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"license\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-license",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"license\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacionlicense at index 2 based on column type using expression grel:if(value==cells[\"original-license\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacionlicense",
    "columnInsertIndex": 2,
    "baseColumnName": "original-license",
    "expression": "grel:if(value==cells[\"license\"].value,1,0)",
    "onError": "set-to-blank"
  },
  
   {
    "op": "core/column-addition",
    "description": "Create column original-eventDate at index 2 based on column occurrenceID using expression grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"eventDate\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "original-eventDate",
    "columnInsertIndex": 2,
    "baseColumnName": "occurrenceID",
    "expression": "grel:cell.cross(\"original-IIAP-mamiferosmineriacauca\",\"occurrenceID\").cells[\"eventDate\"].value[0]",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column validacioneventDate at index 2 based on column eventDate using expression grel:if(value==cells[\"original-eventDate\"].value,1,0)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "validacioneventDate",
    "columnInsertIndex": 2,
    "baseColumnName": "original-eventDate",
    "expression": "grel:if(value==cells[\"eventDate\"].value,1,0)",
    "onError": "set-to-blank"
  }
  
  {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "occurrenceID",
      "validacionoccurrenceID",
      "original-occurrenceID",
      "catalogNumber",
      "validacioncatalogNumber",
      "original-catalogNumber",
      "institutionID",
      "validacioninstitutionID",
      "original-institutionID",
      "institutionCode",
	  "validacioninstitutionCode",
      "original-institutionCode",
      "collectionID",
      "validacioncollectionID",
      "original-collectionID",
      "collectionCode",
      "validacioncollectionCode",
      "original-collectionCode",
      "type",
      "validaciontype",
      "original-type",
      "eventDate",
      "validacioneventDate",
      "original-eventDate",
      "license",
	  "validacionlicense",
      "original-license",
      "basisOfRecord",
      "validacionBasisOfRecord",
      "original-basisOfRecord",
      "kingdom",
      "validacionkingdom",
      "original-kingdom",
      "phylum",
      "validacionphylum",
      "original-phylum",
      "class",
      "validacionclass",
      "original-class",
      "order",
      "validacionorder",
      "original-order",
      "family",
      "validacionfamily",
      "original-family",
      "genus",
      "validaciongenus",
      "original-genus",
      "taxonRank",
      "validaciontaxonRank",
      "original-taxonRank",
      "scientificName",
      "validacionscientificName",
      "original-scientificName",
      "decimalLatitude",
      "validaciondecimalLatitude",
      "original-decimalLatitude",
      "decimalLongitude",
      "validaciondecimalLongitude",
      "original-decimalLongitude",
      "verbatimLatitude",
      "validacionverbatimLatitude",
      "original-verbatimLatitude",
      "verbatimLongitude",
      "validacionverbatimLongitude",
      "original-verbatimLongitude",
      "minimumElevationInMeters",
      "validacionminimumElevationInMeters",
      "original-minimumElevationInMeters",
      "maximumElevationInMeters",
      "validacionmaximumElevationInMeters",
      "original-maximumElevationInMeters",
      "country",
      "validacioncountry",
      "original-country",
      "stateProvince",
      "validacionstateProvince",
      "original-stateProvince",
      "county",
      "validacioncounty",
      "original-county"
    ]
  }

