

/// Este script permite llamar al API Date Parsing de Canadensys para convertir fechas a formato ISO y obtener elementos derivados de Año, Mes y Día



[
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column canadensysDateAPI at index 15 by fetching URLs based on column eventDate using expression grel:\"http://data.canadensys.net/tools/dates.json?data=\"+value\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "canadensysDate",
    "columnInsertIndex": 15,
    "baseColumnName": "eventDate",
    "urlExpression": "grel:\"http://data.canadensys.net/tools/dates.json?data=\"+value\"",
    "onError": "set-to-blank",
    "delay": 250,
    "cacheResponses": true
  },
    {
    "op": "core/column-split",
    "description": "Split column canadensysDateAPI by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "canadensysDateAPI",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "[",
    "regex": false,
    "maxColumns": 2
  },
  {
    "op": "core/column-removal",
    "description": "Remove column canadensysDateAPI 1",
    "columnName": "canadensysDateAPI 1"
  },
  {
    "op": "core/column-split",
    "description": "Split column canadensysDateAPI 2 by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "canadensysDateAPI 2",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "]",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-removal",
    "description": "Remove column canadensysDateAPI 2 2",
    "columnName": "canadensysDateAPI 2 2"
  },
  {
    "op": "core/column-addition",
    "description": "Create column year at index 16 based on column canadensysDateAPI 2 1 using expression grel:value.parseJson().get(\"year\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "year",
    "columnInsertIndex": 16,
    "baseColumnName": "canadensysDateAPI 2 1",
    "expression": "grel:value.parseJson().get(\"year\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column month at index 16 based on column canadensysDateAPI 2 1 using expression grel:value.parseJson().get(\"month\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "month",
    "columnInsertIndex": 16,
    "baseColumnName": "canadensysDateAPI 2 1",
    "expression": "grel:value.parseJson().get(\"month\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column day at index 16 based on column canadensysDateAPI 2 1 using expression grel:value.parseJson().get(\"day\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "day",
    "columnInsertIndex": 16,
    "baseColumnName": "canadensysDateAPI 2 1",
    "expression": "grel:value.parseJson().get(\"day\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column canadensysDateAPI 2 1",
    "columnName": "canadensysDateAPI 2 1"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column year using expression value.toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "year",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column month using expression value.toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "month",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column day using expression value.toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "day",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]